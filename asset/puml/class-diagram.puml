@startuml

title 클래스 다이어그램

abstract class Document {
    +hk: string
    -rk: string
}
abstract class YiguanaDocument extends Document {
    +hk: string
    -rk: string
    -- attributes --
    userId?: string
    byUser?: string
    postId?: string
    category?: string
    comments?: string
    posts?: string
    agg?: string
    reports?: string
    reportsEnd?: string
    === gsi ==
    = byUser
    +userId
    -byUser

    = posts
    +rk
    -posts
    ..
    #EEntity.Like#Omit<EEntity, EEntity.Like>#[userId]

    = postsByCategory
    +rk
    -category
    .. range ..
    #=**EEntity#EEntity#[userId]**
    ~EEntity.Report#Omit<EEntity, EEntity.Like|Entity.Report>#[userId]()
    ~EEntity.Agg#EEntity.Report#Omit<EEntity, EEntity.Like|EEntity.Report>()
    ~EEntity.Agg, type: EEntity.Report, target: Omit<EEntity, EEntity.Like|EEntity.Report>


    = comments
    +postId
    -comments

    = reports
    +agg
    -reports

    = reportsEnd
    +agg
    -reportsEnd

    -- common --
    createdAt: string
    updatedAt?: string
    status?: EEntityStatus
}
class Comment extends YiguanaDocument {
    +hk: string
    -rk: string
    -- attributes --
    content: string
    postId: string
    user: User
    likes: number
    === gsi ==
    comments: string // gsi.rk
    userId?: string // gsi.user.hk
    byUser?: string //gsi.user.rk
    commentId?: string // reply 에서만 정의된다.
}
class Reply extends Comment {
    +hk: string
    -rk: string
    -- attributes --
    ~commentId: string
    refUserName?: string
}
class Like extends YiguanaDocument {
    +hk: string
    -rk: string
    -- attributes --
    userId: string
    byUser: string
    user: User
    ~data: Post | Comment | Reply
}
class Post extends YiguanaDocument {
    +hk: string
    -rk: EEntity.Post
    -- attributes --
    views: number
    likes: number
    children: number
    title: string
    contentUrl: string
    ~user: User
    cover?: string
    updatedAt?: string
    content?: string
    userId?: string // gsi.hk
    byUser?: string // gsi.rk
    category: string // gsi.rk
    posts: string // gsi.rk
}
class Report extends YiguanaDocument {
    +hk: string
    -rk: string
    -- attributes --
    userId: string
    byUser: string
    content: string
    user: User
    data: Post | Comment | Reply
    status: EEntityStatus
}
class ReportAgg extends YiguanaDocument {
    +hk: string
    -rk: string
    -- attributes --
    agg: string
    reports: string
    reported: number
    status: EEntityStatus
    processed?: number
}
class Member extends YiguanaDocument {
    +hk: string
    -rk: string
    -- attributes --
    ip: string
    id: string
    name: string
    photo?: string
    role?: ERole
}
class NonMember extends YiguanaDocument {
    +hk: string
    -rk: string
    -- attributes --
    ip: string
    pw: string
    name: string
}


Post "userId" *... Member : < id
Post "byUser" *... Member : < rk

Comment "user" *--- Member
Comment "byUser" *--- Member
Comment "hk" *... Reply : < commentId

Report "user" *-- Member : < commentId
Report "data" *.. Post
Report "data" *.. Comment
Report "data" *.. Reply

enum EEntityStatus {
    requestedBlock **유저가 신고했을 때 유저 입장에서의 최초 상태**
    blockedBySystem **현재는 쓰이지 않으나 자동으로 충족된 조건에 의해서 블락되는 경우**
    deletedByUser **유저가 삭제한 경우**
    deletedByAdmin **관리자에 의해 삭제된 경우**
    deletedBySystem **현재는 쓰이지 않으나 자동으로 충족된 조건에 의해서 삭제되는 경우**
    innocent **관리자가 판단하기에 이상없음**
    inAudit **일정 수 이상 데이터가 쌓이면 AggReport 객체는 이상태가 된다. 현재는 1부터 시작이라 여기서 부터 바로 시작**
}
enum EIndexName {
  posts
  postsByCategory
  comments
  byUser
  reports
  reportsEnd
}
enum EEntity {
  Post
  Comment
  Like
  Report
  Agg
}
enum ERole {
  admin
  npc
  member
  nonmember
}
enum EYiguanaError {
  assert_max_length
  login_is_required
  not_member_must_have_pw
  pw_must_not_empty
  user_must_have_ip
  user_must_have_name
  empty_string
  not_string
  admin_access_only
  post_comment_reply_are_supported
}


namespace GSI {
    class like << (G,orchid), GSI >> {
        +rk: string
        -category: string
        === 쿼리 ==
        #EEntity.Report#Omit<EEntity, EEntity.Like|Entity.Report>#[userId]
        #EEntity.Agg#EEntity.Report#Omit<EEntity, EEntity.Like|EEntity.Report>
    }
}
@enduml