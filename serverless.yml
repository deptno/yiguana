service:
  name: yiguana

provider:
  name: aws
  profile: yiguana
  stage: ${opt:stage, 'dev'}
  environment: ${file(./env.yml):${self:provider.stage}}
  region: ap-northeast-2
  runtime: nodejs10.x
  timeout: 6
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:BatchWriteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
        - dynamodb:TransactGetItems
        - dynamodb:TransactWriteItems
      Resource: "arn:aws:dynamodb:ap-northeast-2:*:*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "arn:aws:lambda:ap-northeast-2:*:*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource: "arn:aws:s3:::*"
    - Effect: Allow
      Action:
        - firehose:PutRecord
        - firehose:PutRecordBatch
      Resource: "arn:aws:firehose:ap-northeast-2:*:deliverystream/*"

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-jetpack

custom:
  stage: ${opt:stage, self:provider.stage}
  functions:
    dev:
      stream:
        handler: serverless/stream/yiguana.handler
        events:
          - stream:
              arn: "arn:aws:dynamodb:ap-northeast-2:104396725042:table/test-yiguana/stream/2019-06-06T06:41:13.015"
              batchSize: 100
              startingPosition: LATEST
    prd:

functions: ${self:custom.functions.${self:custom.stage}}
